  <div class="title">
  <p>Webプログラミング</p>
  </div>

<h1>Diaries</h1>

<canvas id="watch" width="120" height="120"></canvas>
<script type=”text/javascript” src=”http://www.glic.co.jp/blog/data/get_wiki/index.js”></script>




<div class="tbl">
<table width="70%" rules="all" cellpadding="5">
  <thead>
    <tr>
      <th>Date</th>
      <th>Title</th>
      <th>Body</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @diaries.each do |diary| %>
      <tr>
        <td><%= diary.date.strftime('%Y年%m月%d日 %H:%M:%S') %></td>
        <td><%= diary.title %></td>
        <td><%= diary.body %></td>
        <td><%= link_to 'Show', diary %></td>
        <td><%= link_to 'Edit', edit_diary_path(diary) %></td>
        <td><%= link_to 'Destroy', diary, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>
<br>

<%= link_to '+New Diary', new_diary_path %>
</div>

<script>
function clock(id){
	this.id = id;
	this.init = function(){
		this.timerId = null;
		this.canvas = document.getElementById(this.id);
		this.ctx = this.canvas.getContext('2d');
		this.width = this.canvas.width;
		this.height = this.canvas.height;

		var x = this.ctx;
		x.translate(this.width / 2, this.height / 2);
		x.scale(this.width / 200, this.height / 200);
		x.rotate(-Math.PI/2);
		x.strokeStyle = "black";
		x.fillStyle = "white";
		x.lineCap = "butt";
	}

	this.memoriM = function(){
		var x = this.ctx;
		x.save();
		x.lineWidth = 2;
		for (var i = 0; i < 60; i++) {
			x.beginPath();
			x.rotate(Math.PI/30);
			x.moveTo(90,0);
			x.lineTo(100,0);
			x.stroke();
		}
		x.restore();
	}
	this.memoriH = function(){
		var x = this.ctx;
		x.save();
		x.lineWidth = 8;
		for (var i = 0; i < 12; i++) {
			x.beginPath();
			x.rotate(Math.PI/6);
			x.moveTo(80,0);
			x.lineTo(100,0);
			x.stroke();
		}
		x.restore();
	}
	this.h = function(){
		var x = this.ctx;
		x.save();
		x.rotate(Math.PI/6 * (this.datetime.getHours() + this.datetime.getMinutes() / 60));
		x.lineWidth = 8;
		x.beginPath();
		x.moveTo(-5, 0);
		x.lineTo(60, 0);
		x.stroke();
		x.restore();
	}
	this.m = function(){
		var x = this.ctx;
		x.save();
		x.rotate(Math.PI/30 * (this.datetime.getMinutes() + this.datetime.getSeconds() / 60));
		x.lineWidth = 4;
		x.beginPath();
		x.moveTo(-5, 0);
		x.lineTo(80, 0);
		x.stroke();
		x.restore();
	}
	this.s = function(){
		var x = this.ctx;
		x.save();
		x.rotate(Math.PI/30 * this.datetime.getSeconds());
		x.strokeStyle = "#cc0000";
		x.lineWidth = 2;
		x.beginPath();
		x.moveTo(-10, 0);
		x.lineTo(80, 0);
		x.stroke();
		x.restore();
	}
	this.ticktack = function(){
		if (!this.canvas) {
			this.init();
		}
		this.datetime = new Date();
		var x = this.ctx;
		x.clearRect(-100, -100, 200, 200);
		this.memoriM();
		this.memoriH();
		this.h();
		this.m();
		this.s();
	}
	this.start = function(){
		if (!this.timerId) {
			var _clock = this;
			_clock.ticktack();
			this.timerId = setInterval(function(){_clock.ticktack();}, 1000);
		}
	}
	this.stop = function() {
		if (this.timerId) {
			clearInterval(this.timerId);
			this.timerId = null;
		}
	}
}

//開始処理（jQueryがないときはwindow.onloadなどで）
$(function(){
	var x = new clock('watch');
	x.start();
});
</script>
